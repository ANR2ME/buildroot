--- bluez_utils/tools/hciattach.c	2011-12-27 16:21:41.646046531 +0800
+++ bluez_utils.nommu/tools/hciattach.c	2011-12-27 16:21:59.751154005 +0800
@@ -1405,7 +1405,11 @@
 	sigaction(SIGHUP, &sa, NULL);
 
 	if (detach) {
+#ifdef __NOMMU__
+		if ((pid = vfork())) {
+#else
 		if ((pid = fork())) {
+#endif
 			if (printpid)
 				printf("%d\n", pid);
 			return 0;
--- bluez_utils/plugins/hciops.c	2011-12-27 16:23:11.358047440 +0800
+++ bluez_utils.nommu/plugins/hciops.c	2011-12-27 16:24:38.802296171 +0800
@@ -2216,7 +2216,11 @@
 	start_hci_dev(index);
 
 	/* Do initialization in the separate process */
+#ifdef __NOMMU__
+	pid = vfork();
+#else
 	pid = fork();
+#endif
 	switch (pid) {
 		case 0:
 			atexit(at_child_exit);
@@ -2246,11 +2250,19 @@
 	}
 
 	hci_close_dev(dd);
+#ifdef __NOMMU__
+	_exit(0);
+#else
 	exit(0);
+#endif
 
 fail:
 	hci_close_dev(dd);
+#ifdef __NOMMU__
+	_exit(1);
+#else
 	exit(1);
+#endif
 }
 
 static void init_conn_list(int index)
--- bluez_utils/test/scotest.c	2011-12-27 16:14:59.818047303 +0800
+++ bluez_utils.nommu/test/scotest.c	2011-12-27 16:21:07.116997399 +0800
@@ -166,7 +166,11 @@
 							strerror(errno), errno);
 			goto error;
 		}
+#ifdef __NOMMU__
+		if (vfork()) {
+#else
 		if (fork()) {
+#endif
 			/* Parent */
 			close(nsk);
 			continue;
@@ -193,14 +197,22 @@
 		handler(nsk);
 
 		syslog(LOG_INFO, "Disconnect");
+#ifdef __NOMMU__
+		_exit(0);
+#else
 		exit(0);
+#endif
 	}
 
 	return;
 
 error:
 	close(sk);
+#ifdef __NOMMU__
+	_exit(1);
+#else
 	exit(1);
+#endif
 }
 
 static void dump_mode(int sk)
@@ -308,7 +320,11 @@
 		int i, sk;
 
 		for (i = 0; i < 10; i++){
+#ifdef __NOMMU__
+			if (vfork())
+#else
 			if (fork())
+#endif
 				continue;
 
 			/* Child */
@@ -318,7 +334,11 @@
 							strerror(errno), errno);
 			}
 			close(sk);
+#ifdef __NOMMU__
+			_exit(0);
+#else
 			exit(0);
+#endif
 		}
 
 		sleep(19);
--- bluez_utils/test/l2test.c	2011-12-27 16:14:46.238046524 +0800
+++ bluez_utils.nommu/test/l2test.c	2011-12-27 16:16:43.346794493 +0800
@@ -462,7 +462,11 @@
 							strerror(errno), errno);
 			goto error;
 		}
+#ifdef __NOMMU__
+		if (vfork()) {
+#else
 		if (fork()) {
+#endif
 			/* Parent */
 			close(nsk);
 			continue;
@@ -807,7 +811,11 @@
 	fcntl(sk, F_SETFL, flags | O_NONBLOCK);
 
 	/* fork for duplex channel */
+#ifdef __NOMMU__
+	if (vfork())
+#else
 	if (fork())
+#endif
 		send_mode(sk);
 	else
 		recv_mode(sk);
@@ -851,14 +859,22 @@
 	while (1) {
 		for (n = 0; n < argc; n++) {
 			for (i = 0; i < count; i++) {
+#ifdef __NOMMU__
+				if (vfork())
+#else
 				if (fork())
+#endif
 					continue;
 
 				/* Child */
 				sk = do_connect(argv[n]);
 				usleep(500);
 				close(sk);
+#ifdef __NOMMU__
+				_exit(0);
+#else
 				exit(0);
+#endif
 			}
 		}
 		sleep(4);
--- bluez_utils/test/rctest.c	2011-12-27 16:35:18.482046901 +0800
+++ bluez_utils.nommu/test/rctest.c	2011-12-27 16:36:37.032906124 +0800
@@ -329,7 +329,11 @@
 							strerror(errno), errno);
 			goto error;
 		}
+#ifdef __NOMMU__
+		if (vfork()) {
+#else
 		if (fork()) {
+#endif
 			/* Parent */
 			close(nsk);
 			continue;
@@ -393,14 +397,22 @@
 		handler(nsk);
 
 		syslog(LOG_INFO, "Disconnect: %m");
+#ifdef __NOMMU__
+		_exit(0);
+#else
 		exit(0);
+#endif
 	}
 
 	return;
 
 error:
 	close(sk);
+#ifdef __NOMMU__
+	_exit(1);
+#else
 	exit(1);
+#endif
 }
 
 static void dump_mode(int sk)
@@ -549,14 +561,22 @@
 	while (1) {
 		for (n = 0; n < argc; n++) {
 			for (i = 0; i < count; i++) {
+#ifdef __NOMMU__
+				if (vfork())
+#else
 				if (fork())
+#endif
 					continue;
 
 				/* Child */
 				sk = do_connect(argv[n]);
 				usleep(500);
 				close(sk);
+#ifdef __NOMMU__
+				_exit(0);
+#else
 				exit(0);
+#endif
 			}
 		}
 		sleep(4);
--- bluez_utils/tools/rfcomm.c	2012-08-21 11:16:24.119225025 +0800
+++ bluez_utils.nommu/tools/rfcomm.c	2012-08-21 11:18:07.111223697 +0800
@@ -277,7 +277,11 @@
 		cmdargv[i] = (strcmp(argv[i], "{}") == 0) ? devname : argv[i];
 	cmdargv[i] = NULL;
 
+#ifdef __NOMMU__
+	pid = vfork();
+#else
 	pid = fork();
+#endif
 
 	switch (pid) {
 	case 0:
--- bluez_utils/compat/dun.c	2012-08-21 11:23:38.931473630 +0800
+++ bluez_utils.nommu/compat/dun.c	2012-08-21 11:19:46.791224958 +0800
@@ -156,9 +156,15 @@
 
 static int dun_exec(char *tty, char *prog, char **args)
 {
-	int pid = fork();
+	int pid;
 	int fd;
 
+#ifdef __NOMMU__
+	pid = vfork();
+#else
+	pid = fork();
+#endif
+
 	switch (pid) {
 	case -1:
 		return -1;
--- bluez_utils/compat/dund.c	2012-08-21 11:24:54.775224785 +0800
+++ bluez_utils.nommu/compat/dund.c	2012-08-21 11:27:02.683225445 +0800
@@ -170,7 +170,11 @@
 			continue;
 		}
 
+#ifdef __NOMMU__
+		switch (vfork()) {
+#else
 		switch (fork()) {
+#endif
 		case 0:
 			break;
 		case -1:
@@ -202,7 +206,11 @@
 			syslog(LOG_INFO, "New connection from %s", ba);
 
 		close(nsk);
+#ifdef __NOMMU__
+		_exit(0);
+#else
 		exit(0);
+#endif
 	}
 
 	if (use_sdp)
--- bluez_utils/compat/pand.c	2012-08-21 11:28:58.863225622 +0800
+++ bluez_utils.nommu/compat/pand.c	2012-08-21 11:31:16.503224886 +0800
@@ -110,7 +110,11 @@
 	if (access(script, R_OK | X_OK))
 		return;
 
+#ifdef __NOMMU__
+	if (vfork())
+#else
 	if (fork())
+#endif
 		return;
 
 	if (sk >= 0)
@@ -131,7 +135,11 @@
 
 	execv(script, argv);
 
+#ifdef __NOMMU__
+	_exit(1);
+#else
 	exit(1);
+#endif
 }
 
 /* Wait for disconnect or error condition on the socket */
diff --git a/compat/pand.c b/compat/pand.c
index e56887c..40cde69 100644
--- a/compat/pand.c
+++ b/compat/pand.c
@@ -262,7 +262,11 @@ static int do_listen(void)
 			continue;
 		}
 
+#ifdef __NOMMU__
+		switch (vfork()) {
+#else
 		switch (fork()) {
+#endif
 		case 0:
 			break;
 		case -1:
